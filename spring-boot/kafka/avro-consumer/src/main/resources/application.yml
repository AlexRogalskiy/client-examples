topic:
  name: avro-sample
  partitions-num: 4
  replication-factor: 2
server:
  port: 9080
spring:
  kafka:
    bootstrap-servers:
      - ${BOOTSTRAP_SERVER}  
    properties:
      # CCloud broker connection parameters
      ssl.endpoint.identification.algorithm: https
      sasl.mechanism: OAUTHBEARER
      request.timeout.ms: 20000
      retry.backoff.ms: 500
      sasl.jaas.config: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required; 
      sasl.login.callback.handler.class: io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
      security.protocol: SASL_SSL

      #confluent registry
      #schema.registry.url: ${REGISTRY_URL}
      
      #apicurio in compat mode
      apicurio.registry.url: ${REGISTRY_URL}
      apicurio.registry.as-confluent: true
      apicurio.registry.global-id: io.apicurio.registry.utils.serde.strategy.FindLatestIdStrategy
      apicurio.registry.use-specific-avro-reader: true
        
    consumer:
      group-id: avro-sample
    #  auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      value-deserializer: io.apicurio.registry.utils.serde.AvroKafkaDeserializer
    template:
      default-topic:
logging:
  level:
    root: info
